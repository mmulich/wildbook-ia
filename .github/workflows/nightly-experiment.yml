name: Nightly experiment
on:
  push:
    paths:
      - '.github/workflows/nightly-experiment.yml'



jobs:
  wildbook-ia:
    name: Building mmulich/wildbook-ia:nightly
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      # - name: Login to DockerHub
      #   uses: docker/login-action@v1
      #   with:
      #     username: ${{ secrets.DOCKERHUB_USERNAME }}
      #     password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GH_TOKEN }}

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ghcr.io/mmulich/wildbook-ia:nightly

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}


  wbia-base-image:
    name: Building mmulich/wbia-base
    runs-on: ubuntu-latest
    outputs:
      digest: ${{ steps.docker_build.outputs.digest }}
      image-name: ghcr.io/mmulich/wbia-base
      # fully qualified image name
      fq-image-name: ghcr.io/mmulich/wbia-base@${{ steps.docker_build.outputs.digest }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Cache Docker layers
        uses: actions/cache@v2
        env:
          cache-name: cache-base
        with:
          path: /tmp/.buildx-cache
          # Cache invalidated when any file in the 'devops' directory changes
          key: ${{ runner.os }}-buildx-${{ env.cache-name }}-${{ hashFiles('devops/base/**') }}
          restore-keys: ${{ runner.os }}-buildx-${{ env.cache-name }}-${{ hashFiles('devops/base/**') }}
      # - name: Login to DockerHub
      #   uses: docker/login-action@v1
      #   with:
      #     username: ${{ secrets.DOCKERHUB_USERNAME }}
      #     password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GH_TOKEN }}
      - name: Build and push wbia-base:nightly
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./devops/base/Dockerfile
          push: true
          tags: ghcr.io/mmulich/wbia-base:nightly
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}


  wbia-dependencies-image:
    name: Building mmulich/wbia-dependencies:nightly
    runs-on: ubuntu-latest
    needs: [ wbia-base-image ]
    outputs:
      digest: ${{ steps.docker_build.outputs.digest }}
      image-name: ghcr.io/mmulich/wbia-dependencies
      # fully qualified image name
      fq-image-name: ghcr.io/mmulich/wbia-dependencies@${{ steps.docker_build.outputs.digest }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Cache Docker layers
        uses: actions/cache@v2
        env:
          # Base the cache on the previous image's build
          # Cache invalidation when the previous image changes, to prevent building up unused layers in the cache
          # or when any file in the 'devops' directory changes
          cache-name: cache-dependencies-${{ needs.wbia-base-image.outputs.digest }}-${{ hashFiles('devops/dependencies/**') }}
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ env.cache-name }}
          restore-keys: ${{ runner.os }}-buildx-${{ env.cache-name }}
      # - name: Login to DockerHub
      #   uses: docker/login-action@v1
      #   with:
      #     username: ${{ secrets.DOCKERHUB_USERNAME }}
      #     password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GH_TOKEN }}
      - name: Build and push wbia-dependencies:nightly
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./devops/dependencies/Dockerfile
          push: true
          tags: ghcr.io/mmulich/wbia-dependencies:nightly
          build-args: |
            FROM_BASE=${{ needs.wbia-base-image.outputs.fq-image-name }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}


  wbia-provision-image:
    name: Building mmulich/wbia-provision:nightly
    runs-on: ubuntu-latest
    needs: [ wbia-dependencies-image ]
    outputs:
      digest: ${{ steps.docker_build.outputs.digest }}
      image-name: ghcr.io/mmulich/wbia-provision
      # fully qualified image name
      fq-image-name: ghcr.io/mmulich/wbia-provision@${{ steps.docker_build.outputs.digest }}
    # Note, we cannot cache this step, because it's too large.
    # Enabling caching causes the build to run into an 'out of space' issue.
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      # - name: Cache Docker layers
      #   uses: actions/cache@v2
      #   env:
      #     # Base the cache on the previous image's build
      #     # Cache invalidation when the previous image changes, to prevent building up unused layers in the cache
      #     # or when any file in the 'devops' directory changes
      #     cache-name: cache-provision-${{ needs.wbia-dependencies-image.outputs.digest }}-${{ hashFiles('devops/provision/**') }}
      #   with:
      #     path: /tmp/.buildx-cache
      #     key: ${{ runner.os }}-buildx-${{ env.cache-name }}
      #     restore-keys: ${{ runner.os }}-buildx-${{ env.cache-name }}
      # - name: Login to DockerHub
      #   uses: docker/login-action@v1
      #   with:
      #     username: ${{ secrets.DOCKERHUB_USERNAME }}
      #     password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GH_TOKEN }}
      - name: Build and push wbia-provision:nightly
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./devops/provision/Dockerfile
          push: true
          tags: ghcr.io/mmulich/wbia-provision:nightly
          build-args: |
            FROM_BASE=${{ needs.wbia-dependencies-image.outputs.fq-image-name }}
            VCS_REF=fix-nightly
            VCS_URL=https://github.com/mmulich/wildbook-ia
          # cache-from: type=local,src=/tmp/.buildx-cache
          # cache-to: type=local,dest=/tmp/.buildx-cache
      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}


  wbia-image:
    name: Building mmulich/wbia:nightly
    runs-on: ubuntu-latest
    needs: [ wbia-base-image, wbia-provision-image ]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      # - name: Login to DockerHub
      #   uses: docker/login-action@v1
      #   with:
      #     username: ${{ secrets.DOCKERHUB_USERNAME }}
      #     password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GH_TOKEN }}
      - name: Build and push wbia:nightly
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: ./devops/
          file: ./devops/Dockerfile
          push: true
          tags: ghcr.io/mmulich/wbia:nightly
          build-args: |
            WBIA_BASE=${{ needs.wbia-base-image.outputs.fq-image-name }}
            WBIA_PROVISION=${{ needs.wbia-provision-image.outputs.fq-image-name }}
      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
