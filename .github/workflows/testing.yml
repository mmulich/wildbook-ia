# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Testing

on: push

jobs:
  lint:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # For speed, we choose one version and that should be the lowest common denominator
        python-version: [3.6, 3.7, 3.8]

    steps:
      # Checkout and env setup
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-lint
          restore-keys: |
            ${{ runner.os }}-pip-lint

      # Lint things before going any further
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest
      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --show-source --statistics
          # exit-zero treats all errors as warnings.
          flake8 . --count --exit-zero --max-complexity=10 --statistics

  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest] # Disable "macos-latest" for now
        # For speed, we choose one version and that should be the lowest common denominator
        python-version: [3.6, 3.7, 3.8]
        postgres: ['', postgres]

    services:
      db:
        image: postgres:10
        env:
          POSTGRES_PASSWORD: wbia
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      # Checkout and env setup
      - uses: actions/checkout@v2
      - name: Install pgloader
        if: matrix.postgres
        run: sudo apt-get install pgloader
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt', 'requirements/*.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      # Install and test
      - name: Install the project
        run: pip install -e .[tests,postgres]
      - name: Test with pytest
        run: |
          mkdir -p data/work
          python -m wbia --set-workdir data/work --preload-exit
          pytest --slow
        env:
          WBIA_BASE_DB_URI: postgresql://postgres:wbia@localhost:5432
          POSTGRES: ${{ matrix.postgres }}

  on-failure:
    # This is not in the 'test' job itself because it would otherwise notify once per matrix combination.
    runs-on: ubuntu-latest
    needs: test
    # Apparently if `always()` is at the start of the condition, github actions will run
    # this job regardless of the state(s) of the `needs` job(s).
    if: ${{ always() && needs.test.result != 'success' && contains(github.ref, 'develop') }}
    steps:
      # Notify status in Slack
      - name: Slack Notification
        uses: rtCamp/action-slack-notify@master
        env:
          SLACK_CHANNEL: ia-development
          SLACK_COLOR: '#FF0000'
          SLACK_ICON: https://avatars.slack-edge.com/2020-03-02/965719891842_db87aa21ccb61076f236_44.png
          SLACK_MESSAGE: '*develop* branch is FAILING TESTS :exclamation: :face_with_head_bandage:'
          SLACK_USERNAME: "WBIA"
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
